[buildout]
extends =
	production.cfg
	versions/development-versions.cfg
	
parts +=
    zopeskel
    test
    zopepy
    mkrelease
    coverage-report
    checkversions

sources = sources

auto-checkout =
#    Products.RichDocument
#    Products.Poi

    
# Egg sets
[eggs]
main +=
#    PasteScript
#    Products.RichDocument
#
    Products.Poi
test = 
#    optilux.policy [test]

devtools =
    bpython
    plone.reload
    Products.PDBDebugMode
    Products.PrintingMailHost
    Products.DocFinderTab


[instance]	
eggs +=
    ${eggs:main}
    ${eggs:test}
    ${eggs:devtools}
    
zcml +=
#    Products.RichDocument
#    Products.Poi

[sources]
Products.RichDocument = 
    svn http://svn.plone.org/svn/collective/Products.RichDocument/trunk/
Products.Poi =
    git git://github.com/collective/Products.Poi.git rev=2.1.4


# Installs ZopeSkel, which can be used to create new packages
# Run: ``bin/zopeskel``
[zopeskel]
recipe = zc.recipe.egg
eggs = 
    ZopeSkel == 2.21.2


# Test runner. Run: ``bin/test`` to execute all tests
[test]
recipe = zc.recipe.testrunner
eggs = ${eggs:test}
defaults = ['--auto-color', '--auto-progress']


# Installs the ``bin/zopepy`` interpreter.
[zopepy]
recipe = zc.recipe.egg
eggs = 
    ${eggs:main}
    ${eggs:devtools}
interpreter = zopepy


# Tool to make releases
# Run: ``bin/mkrelease --help``
[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease


# Coverage report generator.
# Run: ``bin/test --coverage=coverage``
# and then: ``bin/coveragereport``
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')


# Tool to help check for new versions.
# Run: ``bin/checkversions versions.cfg``
[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]
